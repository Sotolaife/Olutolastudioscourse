{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the OLÚTỌ́LÁ Studios course platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "fullName": {
          "type": "string",
          "description": "Student's full name."
        },
        "email": {
          "type": "string",
          "description": "Email address used for login and communication.",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "description": "Optional phone number for Telegram verification."
        },
        "progress": {
          "type": "string",
          "description": "Tracks lessons completed by the user."
        },
        "devices": {
          "type": "array",
          "description": "List of device IDs used to access the platform (limit to 2).",
          "items": {
            "type": "string"
          }
        },
        "paymentStatus": {
          "type": "string",
          "description": "Payment status of the user ('pending', 'active', or 'expired')."
        },
        "joinDate": {
          "type": "string",
          "description": "Date when the user enrolled.",
          "format": "date-time"
        },
        "lastLogin": {
          "type": "string",
          "description": "Last login timestamp.",
          "format": "date-time"
        },
        "role": {
          "type": "string",
          "description": "Role of the user ('student' or 'admin')."
        }
      },
      "required": [
        "id",
        "fullName",
        "email",
        "paymentStatus",
        "joinDate",
        "lastLogin",
        "role"
      ]
    },
    "Course": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Course",
      "type": "object",
      "description": "Represents a course offered on the OLÚTỌ́LÁ Studios platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the course entity."
        },
        "title": {
          "type": "string",
          "description": "Title of the course (e.g., 'Becoming a Professional Video Editor')."
        },
        "description": {
          "type": "string",
          "description": "Short description of the course."
        },
        "thumbnail": {
          "type": "string",
          "description": "URL of the course thumbnail image (Firebase Storage or CDN)."
        },
        "price": {
          "type": "number",
          "description": "Price of the course."
        },
        "status": {
          "type": "string",
          "description": "Status of the course ('published' or 'draft')."
        },
        "category": {
          "type": "string",
          "description": "Category of the course (e.g., 'Design', 'Branding')."
        },
        "moduleIds": {
          "type": "array",
          "description": "List of lesson IDs (references to Lesson). (Relationship: Course 1:N Lesson)",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "description": "Date when the course was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Date when the course was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "title",
        "description",
        "thumbnail",
        "price",
        "status",
        "category",
        "createdAt",
        "updatedAt"
      ]
    },
    "Lesson": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Lesson",
      "type": "object",
      "description": "Represents a lesson within a course.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the lesson entity."
        },
        "courseId": {
          "type": "string",
          "description": "Reference to the parent course. (Relationship: Course 1:N Lesson)"
        },
        "title": {
          "type": "string",
          "description": "Title of the lesson (e.g., 'Introduction to Branding')."
        },
        "videoUrl": {
          "type": "string",
          "description": "URL of the YouTube embed link for the lesson."
        },
        "resources": {
          "type": "array",
          "description": "List of downloadable resources (PDFs, templates).",
          "items": {
            "type": "string"
          }
        },
        "order": {
          "type": "number",
          "description": "Order of the lesson within the course (1, 2, 3...).",
          "format": "number"
        },
        "description": {
          "type": "string",
          "description": "Summary of the lesson content."
        },
        "duration": {
          "type": "string",
          "description": "The length of the lesson (e.g., '15 mins')."
        },
        "status": {
          "type": "string",
          "description": "Status of the lesson ('active' or 'hidden')."
        },
        "createdAt": {
          "type": "string",
          "description": "Date when the lesson was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "courseId",
        "title",
        "videoUrl",
        "order",
        "description",
        "status",
        "createdAt"
      ]
    },
    "Payment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Payment",
      "type": "object",
      "description": "Represents a payment transaction made by a user for a course.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the payment transaction."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the paying user. (Relationship: User 1:N Payment)"
        },
        "courseId": {
          "type": "string",
          "description": "Reference to the purchased course. (Relationship: Course 1:N Payment)"
        },
        "amount": {
          "type": "number",
          "description": "Amount paid for the course."
        },
        "method": {
          "type": "string",
          "description": "Payment method used (e.g., 'Paystack')."
        },
        "status": {
          "type": "string",
          "description": "Status of the payment ('successful', 'failed', 'pending')."
        },
        "paymentDate": {
          "type": "string",
          "description": "Date when the payment was made.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "courseId",
        "amount",
        "method",
        "status",
        "paymentDate"
      ]
    },
    "EmailTrigger": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "EmailTrigger",
      "type": "object",
      "description": "Represents an email trigger for automated emails.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the email trigger."
        },
        "type": {
          "type": "string",
          "description": "Type of email trigger ('welcome', 'progress', 'reminder')."
        },
        "templateId": {
          "type": "string",
          "description": "Reference to the email template."
        },
        "triggerTime": {
          "type": "string",
          "description": "Event that triggers the email (e.g., 'onSignup', 'onCourseComplete')."
        }
      },
      "required": [
        "id",
        "type",
        "templateId",
        "triggerTime"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. Uses path-based ownership for private user data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/courses/{courseId}",
        "definition": {
          "entityName": "Course",
          "schema": {
            "$ref": "#/backend/entities/Course"
          },
          "description": "Stores course information.",
          "params": [
            {
              "name": "courseId",
              "description": "The unique identifier for the course."
            }
          ]
        }
      },
      {
        "path": "/lessons/{lessonId}",
        "definition": {
          "entityName": "Lesson",
          "schema": {
            "$ref": "#/backend/entities/Lesson"
          },
          "description": "Stores lesson details.",
          "params": [
            {
              "name": "lessonId",
              "description": "The unique identifier for the lesson."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/payments/{paymentId}",
        "definition": {
          "entityName": "Payment",
          "schema": {
            "$ref": "#/backend/entities/Payment"
          },
          "description": "Stores payment information for each user. Uses path-based ownership.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "paymentId",
              "description": "The unique identifier for the payment."
            }
          ]
        }
      },
      {
        "path": "/email_triggers/{emailTriggerId}",
        "definition": {
          "entityName": "EmailTrigger",
          "schema": {
            "$ref": "#/backend/entities/EmailTrigger"
          },
          "description": "Stores email trigger configurations.",
          "params": [
            {
              "name": "emailTriggerId",
              "description": "The unique identifier for the email trigger."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to provide a secure and scalable platform for OLÚTỌ́LÁ Studios' online courses, adhering to the principles of Authorization Independence, Clarity of Intent, DBAC, and QAPs. The structure prioritizes path-based ownership for user-specific data and utilizes structural segregation to maintain homogeneous security postures within collections.  Authorization Independence is achieved through denormalization where necessary. For instance, if access to lessons depended on course attributes, those attributes would be copied into each lesson document. This avoids the need for `get()` calls in security rules, facilitating atomic operations and simplifying debugging.\n\nTo support QAPs, the structure leverages structural segregation.  Publicly listable courses reside in the `/courses` collection, while user-specific data like payments and progress are stored under `/users/{userId}`, ensuring secure list operations based on path-based ownership.  Roles are stored directly on the user document in the `/users` collection.\n\nIn summary, this design enables efficient data retrieval, straightforward security rule implementation, and robust application performance."
  }
}